name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  NAMESPACE: zyg5467

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64
        
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Install Python and hatch
      run: |
        python -m pip install --upgrade pip
        python -m pip install hatch
        
    - name: Build commons library
      run: |
        cd services/commons
        if [ -f "run_build.sh" ]; then
          chmod +x run_build.sh
          ./run_build.sh
        fi
        
    - name: Copy commons to all services
      run: |
        cd services/commons
        if [ -f "run_copy.sh" ]; then
          chmod +x run_copy.sh
          for service in account terminal master-data cart report journal stock; do
            ./run_copy.sh $service
          done
        fi
        
    - name: Build and push all Docker images
      id: build-images
      run: |
        SERVICES="account terminal master-data cart report journal stock"
        
        # Build and push each service
        for service in $SERVICES; do
          echo "Building and pushing $service..."
          
          # Build and push image
          docker buildx build \
            --platform linux/amd64 \
            --push \
            --tag ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/pos-$service:latest \
            ./services/$service
            
          # Get the digest
          DIGEST=$(docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/pos-$service:latest --format '{{.Manifest.Digest}}')
          
          # Save digest to output
          echo "${service//-/_}_digest=$DIGEST" >> $GITHUB_OUTPUT
          echo "Built $service with digest: $DIGEST"
        done
        
    - name: Update docker-compose.yaml with SHA256 digests
      run: |
        # Set environment variables for the update script
        export ACCOUNT_DIGEST="${{ steps.build-images.outputs.account_digest }}"
        export TERMINAL_DIGEST="${{ steps.build-images.outputs.terminal_digest }}"
        export MASTER_DATA_DIGEST="${{ steps.build-images.outputs.master_data_digest }}"
        export CART_DIGEST="${{ steps.build-images.outputs.cart_digest }}"
        export REPORT_DIGEST="${{ steps.build-images.outputs.report_digest }}"
        export JOURNAL_DIGEST="${{ steps.build-images.outputs.journal_digest }}"
        export STOCK_DIGEST="${{ steps.build-images.outputs.stock_digest }}"
        
        # Run the update script
        chmod +x ./scripts/update_compose_digests.sh
        ./scripts/update_compose_digests.sh --use-env
        
    - name: Commit and push updated docker-compose.yaml
      run: |
        cd services
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docker-compose.yaml
        
        # Check if there are any changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "chore: update docker-compose.yaml with latest image SHA256 digests

ðŸ¤– Generated by GitHub Actions

- account: ${{ steps.build-images.outputs.account_digest }}
- terminal: ${{ steps.build-images.outputs.terminal_digest }}  
- master-data: ${{ steps.build-images.outputs.master_data_digest }}
- cart: ${{ steps.build-images.outputs.cart_digest }}
- report: ${{ steps.build-images.outputs.report_digest }}
- journal: ${{ steps.build-images.outputs.journal_digest }}
- stock: ${{ steps.build-images.outputs.stock_digest }}
"
          git push
        fi