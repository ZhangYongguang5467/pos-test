name: Test Single Service Build

on:
  workflow_dispatch:

env:
  REGISTRY: docker.io
  NAMESPACE: zyg5467

jobs:
  test-single-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Install hatch
      run: |
        python -m pip install --upgrade pip
        python -m pip install hatch
        
    - name: Test commons build
      run: |
        echo "🔨 Testing commons build process..."
        
        cd services/commons
        echo "📂 Current directory: $(pwd)"
        echo "📋 Files:"
        ls -la
        
        echo "📋 Building commons with run_build.sh..."
        if [ -f "run_build.sh" ]; then
          chmod +x run_build.sh
          ./run_build.sh
          echo "✅ Build completed"
          echo "📋 Build output:"
          ls -la dist/ || echo "No dist directory"
        else
          echo "❌ run_build.sh not found"
          exit 1
        fi
        
    - name: Test commons copy
      run: |
        cd services/commons
        echo "🔄 Testing commons copy to account service..."
        
        if [ -f "run_copy.sh" ]; then
          chmod +x run_copy.sh
          ./run_copy.sh account
          echo "✅ Copy completed"
          
          echo "📋 Checking copy result:"
          if [ -d "../account/commons/dist" ]; then
            ls -la ../account/commons/dist/
          else
            echo "❌ Copy failed - no dist directory found"
            exit 1
          fi
        else
          echo "❌ run_copy.sh not found"
          exit 1
        fi
        
    - name: Test single Docker build
      run: |
        echo "🐳 Testing Docker build for account service..."
        
        SERVICE="account"
        IMAGE_NAME="${{ env.REGISTRY }}/${{ env.NAMESPACE }}/pos-$SERVICE:test"
        
        echo "📂 Checking service directory:"
        ls -la ./services/$SERVICE
        
        echo "📋 Checking Dockerfile:"
        cat ./services/$SERVICE/Dockerfile
        
        echo "🔨 Building Docker image..."
        docker build \
          --tag $IMAGE_NAME \
          ./services/$SERVICE
          
        echo "✅ Build successful!"
        
        echo "📋 Image info:"
        docker images $IMAGE_NAME
        
        echo "🚀 Testing push..."
        docker push $IMAGE_NAME
        
        echo "📋 Getting digest..."
        DIGEST=$(docker manifest inspect $IMAGE_NAME | jq -r '.digest')
        echo "Image digest: $DIGEST"